{"version":3,"sources":["images/background.svg","styles/index.js","styles/global/index.js","templates/layout.js","components/Box.js","components/Buttons.js","pages/Home.js","components/list/context/index.js","components/list/ListWrapper.js","components/list/helper/useSizeElement.js","components/list/helper/useSliding.js","components/list/IconArrow.js","components/list/ListButton.js","components/list/Item.js","components/list/List.js","components/list/ListItem.js","components/list/index.js","pages/Countries.js","pages/CountryDetail.js","index.js","routes.js"],"names":["module","exports","setColor","setFont","setRem","number","setFlex","x","y","sizes","large","desktop","tablet","phone","Object","keys","reduce","acc","label","css","createGlobalStyle","children","LayoutWrapper","img","styled","div","props","color","setBackground","Link","width","style","setBorder","property","time","timing","setTransition","HomeWrapper","className","Box","to","React","createContext","useSizeElement","elementRef","useRef","useState","setWidth","useEffect","current","clientWidth","useSliding","elementWidth","countElements","containerRef","containerWidth","setContainerWidth","distance","setDistance","totalInViewport","setTotalInViewport","viewed","setViewed","Math","floor","handlePrev","handleNext","slideProps","transform","hasPrev","hasNext","role","xmlns","viewBox","fill","d","onClick","type","IconArrow","ListButton","button","direc","code","refProps","ItemInner","ref","Item","Children","count","contextValue","Provider","value","ListWrapper","Container","List","country","name","languages","Consumer","src","toLowerCase","alt","slice","map","language","Languages","key","native","continent","data","countries","filter","c","ListItem","continents","useQuery","gql","loading","error","COUNTRY_QUERY","match","params","variables","currency","DetailWrapper","ContentWrapper","Language","client","ApolloClient","uri","ReactDOM","render","path","exact","component","Home","Countries","CountryDetail","document","getElementById"],"mappings":"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","file":"static/js/main.e01e22ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.f5f3aebb.svg\";","import { css } from 'styled-components'\n\nconst setColor =\n{\n    primaryColor: '#af9a7d',\n    secondaryColor: '#857daf',\n    tertiaryColor: '#a7af7d',\n    contrast: '#EDE059',\n    mainWhite: '#fff',\n    mainBlack: '#222',\n    mainGrey: '#EFF3F3',\n}\n\n\nconst setFont =\n{\n    main: \"font-family: 'Lato', sans-serif;\",\n    slanted: \"font-family: 'Courgette', cursive;\"\n}\n\n\nconst setBackground = ({ img , color = 'rgba(0,0,0,0)'} = {}) => \n`\nbackground: linear-gradient(${color}, ${color}), url(${img}) center/ cover fixed no-repeat;\n`\n\n\nconst setRem = (number = 16) => \n\n    `${number / 16}rem`\n\n\nconst setBorder = ({width='2px', style='solid', color='black'} = {}) => \n    \n    `border:${width} ${style} ${color}`\n\n\nconst setTransition = ({ property='all', time='0.3s', timing='ease-in-out' } = {}) =>\n\n    `transition: ${property} ${time} ${timing}`\n\n\nconst setFlex = ({ x='center', y='center' } = {}) => \n    `\n        display: flex;\n        align-items: ${y};\n        justify-content: ${x};\n    `\n\nconst setDirection = direc => \n\n    `\n        ${direc === 'next' ? ' right: 0; span { transform: rotateZ(-90deg); } ' : ''}\n        ${direc === 'prev' ? ' left: 0; span { transform: rotateZ(90deg); } ' : ''}\n    `\n\nconst sizes =\n{\n    large: 1200,\n    desktop: 992,\n    tablet: 768,\n    phone: 576\n}\n\n\nconst media = Object.keys(sizes).reduce((acc, label) => \n{\n    acc[label] = (...args) => css`\n        @media (max-width: ${sizes[label] / 16}em) {\n            ${css(...args)}\n        }\n    `\n    return acc\n}, {})\n\nexport { media, setRem, setColor, setFont, setDirection, setBorder, setTransition, setFlex, setBackground }","import { createGlobalStyle } from 'styled-components'\nimport { setColor, setFont } from '../index'\n\nexport default createGlobalStyle`\n\n    @import url('https://fonts.googleapis.com/css?family=Courgette|Lato:400,700&display=swap');\n\n\n    * {\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-size: 100%;\n        color: ${setColor.mainBlack};\n        background: ${setColor.mainWhite};\n        ${setFont.main};\n    }\n\n    h1 {\n        font-size: 2em;\n        line-height: 1.2;\n        margin-bottom: 0.5em;\n        text-align: center;\n        color: ${setColor.contrast};\n        ${setFont.slanted};\n        text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n    }\n\n    p {\n        line-height: 1.5;\n        margin:0 0 1.5 0;\n        color: ${setColor.mainWhite};\n    }\n`","import React from 'react'\nimport GlobalStyle from '../styles/global'\nimport styled from 'styled-components'\nimport img from '../images/background.svg'\nimport { setBackground } from '../styles'\n\nexport default ({ children }) => \n\n    <LayoutWrapper img={img}>\n        <GlobalStyle />\n        <main> {children} </main>\n    </LayoutWrapper>\n \nconst LayoutWrapper = styled.div`\n    ${ props => setBackground({ img: props.img }) };\n`\n","import styled from 'styled-components'\nimport { setRem, setColor } from '../styles'\n\nexport default styled.div`\n    min-width: 1000px;\n    background: rgba(0,0,0,0.8);\n    text-align:center;\n    padding: ${setRem(60)} ${setRem(32)};\n    color: ${setColor.primaryColor};\n    border-radius: ${setRem(4)};\n`","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { setColor, setRem, setFont, setBorder, setTransition } from '../styles'\n\nexport default styled(Link)`\n\n    margin-top: ${setRem(20)};\n    display: inline-block;\n    background: ${setColor.primaryColor};   \n    color: ${setColor.mainWhite};\n    text-transform: capitalize;\n    font-size: ${setRem(18)};\n    ${setFont.main};\n    padding: ${setRem(17)} ${setRem(36)};\n    ${setBorder({ color: setColor.primaryColor })};\n\n    ${setTransition()};\n    &:hover {\n        background: transparent;\n        color: ${setColor.primaryColor};\n    }\n    text-decoration: none;\n    cursor: pointer;\n`","import React from 'react'\nimport { setFlex } from '../styles'\nimport Layout from '../templates/layout'\nimport styled from 'styled-components'\nimport Box from '../components/Box'\nimport Button from '../components/Buttons'\n\n\nexport default () =>\n\n    <Layout>\n        <HomeWrapper className='container center'>\n            <Box>\n                <h1> Country Selector </h1>\n                <Button to='/countries'> go </Button>\n            </Box>\n        </HomeWrapper>\n    </Layout>\n\n\nconst HomeWrapper = styled.div`\n    height: 100vh;\n    height: 100vh;\n    ${setFlex()};\n`","import React from 'react'\nexport default React.createContext()\n","import styled from 'styled-components'\n\nexport default styled.div`\n    padding: 75px 0;\n    overflow: hidden;\n    position: relative;\n`","import { useState, useRef, useEffect } from 'react'\n\nconst useSizeElement = () => \n{\n    const elementRef = useRef(null)\n    const [width, setWidth] = useState(0)\n\n    useEffect(() => \n    {\n        setWidth(elementRef.current.clientWidth)\n    }, \n    [])\n\n    return { width, elementRef }\n}\n\nexport default useSizeElement","import { useState, useRef, useEffect } from 'react'\n\nconst PADDINGS = 110\n\nconst useSliding = (elementWidth, countElements) => \n{\n    const containerRef = useRef(null)\n    const [containerWidth, setContainerWidth] = useState(0)\n    const [distance, setDistance] = useState(0)\n    const [totalInViewport, setTotalInViewport] = useState(0)\n    const [viewed, setViewed] = useState(0)\n\n    useEffect(() => \n    {\n        const containerWidth = containerRef.current.clientWidth - PADDINGS\n\n        setContainerWidth(containerWidth)\n        setTotalInViewport(Math.floor(containerWidth / elementWidth))\n    }, \n    // eslint-disable-next-line\n    [containerRef.current])\n\n    const handlePrev = () => \n    {\n        setViewed(viewed - totalInViewport)\n        setDistance(distance + containerWidth)\n    }\n\n    const handleNext = () => \n    {\n        setViewed(viewed + totalInViewport)\n        setDistance(distance - containerWidth)\n    }\n\n    const slideProps = \n    {\n        style: { transform: `translate3d(${distance}px, 0, 0)` }\n    }\n\n    const hasPrev = distance < 0\n    const hasNext = (viewed + totalInViewport) < countElements\n\n    return { handlePrev, handleNext, slideProps, containerRef, hasPrev, hasNext }\n}\n\nexport default useSliding","import React from 'react'\nimport { setColor } from '../../styles'\n\nexport default () => \n\n    <svg \n        role=\"img\" \n        xmlns=\"http://www.w3.org/2000/svg\" \n        viewBox=\"0 0 320 512\"\n    >\n        <path\n            fill={setColor.tertiaryColor}\n            d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"\n        />\n    </svg>","import React from 'react'\nimport { setDirection } from '../../styles'\nimport IconArrow from './IconArrow'\nimport styled from 'styled-components'\n\n\nexport default ({ onClick, type }) => \n\n    <ListButton type={type} onClick={onClick}>\n        <span>\n            <IconArrow />\n        </span>\n    </ListButton>\n\n\nconst ListButton = styled.button`\n\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 55px;\n    cursor: pointer;\n    background: transparent;\n    border: 0;\n    outline: 0;\n    padding: 0;\n    margin: 40px 0;\n    z-index: 4;\n\n    span {\n        width: 25px;\n        color: #fff;\n        display: block;\n        margin: 0 auto;\n    }\n\n    ${props => setDirection(props.type)}\n`\n\n ","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { setRem } from '../../styles'\n\nexport default ({ code, children, refProps }) =>\n\n    <Item\n        to={`/countries/${code}`} \n        style={{ color: 'black' }}  \n    >\n        <ItemInner ref={refProps}>\n            {children}\n        </ItemInner>\n    </Item>\n\n\nconst ItemInner = styled.div`\n    padding: 10px;\n\n    p {\n        font-size: ${setRem(17)};\n    }\n`\n\nexport const Item = styled(Link)`\n    background-color: rgba(0,0,0,0.8); \n    border-radius: 4px;\n    z-index: 4;\n    flex: 0 0 13%;\n    text-align: center;\n    margin: 0 2px;\n    transition: transform 300ms ease 100ms;\n    text-decoration: none;\n`","import React from 'react'\nimport Context from './context'\nimport ListWrapper from './ListWrapper'\nimport styled from 'styled-components'\n\nimport useSizeElement from './helper/useSizeElement'\nimport useSliding from './helper/useSliding'\n\nimport ListButton from './ListButton'\n\nimport { Item } from './Item'\n\n\nexport default ({ children }) => \n{\n    const { width, elementRef } = useSizeElement()\n    const {\n        handlePrev,\n        handleNext,\n        slideProps,\n        containerRef,\n        hasNext,\n        hasPrev\n    } = useSliding(width, React.Children.count(children))\n\n    const contextValue = { elementRef }\n\n    return (\n        <Context.Provider value={contextValue}>\n\n            <ListWrapper>\n\n                <List>\n\n                    <Container \n                        ref={containerRef} \n                        {...slideProps}\n                    >\n                        {children}\n                    </Container>\n\n                </List>\n\n                {hasPrev && <ListButton onClick={handlePrev} type=\"prev\" />}\n                {hasNext && <ListButton onClick={handleNext} type=\"next\" />}\n\n            </ListWrapper>\n\n        </Context.Provider>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    padding: 0 55px;\n    transition: transform 300ms ease 100ms;\n    z-index: 3;\n    width: 100%;\n`\n\nconst List = styled.div`\n\n    display: flex;\n    position: relative;\n\n    ${Item}:hover {\n        transform: scale(1.5) !important;\n    }\n\n    &:hover ${Item} {\n        transform: translateX(-25%);\n    }\n\n    ${Item}:hover ~ ${Item} {\n        transform: translateX(25%);\n    }\n`","import React from 'react'\nimport { setColor, setRem } from '../../styles'\nimport Context from './context'\nimport styled from 'styled-components'\n\nimport Item from './Item'\n\n\nexport default ({ country: { name, languages, code } }) =>\n\n    <Context.Consumer>\n\n        { ({ elementRef }) => \n        \n            <Item \n                refProps={elementRef}\n                code={code}\n            >\n                <img \n                    src={`https://www.countryflags.io/${code.toLowerCase()}/shiny/64.png`} \n                    alt={code}\n                /> \n                <p> {name} </p>\n\n                {languages.slice(0, 1).map(language => \n                    <Languages key={language.name}>\n                        <p> {language.name} </p>\n                        <p> {language.native} </p>\n                    </Languages>\n                )}\n\n            </Item>\n\n        }\n\n    </Context.Consumer>\n\n\nconst Languages = styled.div`\n    margin-top: 20px;\n\n    p {\n        color: ${setColor.primaryColor};\n        font-size: ${setRem(12)};\n    }\n`","import List from './List'\nimport ListItem from './ListItem'\nimport React from 'react'\n\nexport default ({ continent, data }) => \n\n    <List>\n        {data.countries.filter(c => c.continent.name === continent).map(country => \n            <ListItem \n                key={country.code}\n                name={country.name}\n                country={country}\n            />\n        )}\n    </List>\n\n \n","import React from 'react'\nimport Layout from '../templates/layout'\nimport { gql } from \"apollo-boost\"\nimport { useQuery } from '@apollo/react-hooks'\nimport List from '../components/list'\n\nconst continents = ['Africa', 'Antarctica', 'Asia', 'Europe', 'North America', 'Oceania', 'South America']\n\nexport default () =>\n{\n    const { loading, error, data } = useQuery(gql`\n        {   \n            countries {\n                name\n                languages {\n                    native\n                    name\n                }\n                continent {\n                    name\n                }\n                code\n            }\n        }\n    `)\n\n    if (loading) return <p> Loading... </p>\n    if (error) return <p> Error :( </p>\n\n    return (\n        <Layout>\n            {continents.map(continent => \n                <div key={continent}>\n                    <h1> {continent} </h1>\n                    <List \n                        continent={continent}\n                        data={data}\n                    />\n                </div>\n            )}\n        </Layout>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { setRem, setColor, setFlex } from '../styles'\nimport Layout from '../templates/layout'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport img from '../images/background.svg'\nimport Box from '../components/Box'\nimport Button from '../components/Buttons'\n\nconst COUNTRY_QUERY = gql`\n    query CountryQuery($code: String!){\n        country(code: $code) {\n            name\n            currency\n            phone\n            languages {\n                code\n                name\n            }\n        }\n    }\n`\n\nexport default ({ match }) =>\n{\n    const { code } = match.params\n    const { loading, error, data } = useQuery(COUNTRY_QUERY, { variables: { code } })\n\n    if (loading) return <p>Loading ...</p>\n    if (error) return <p> Error :( </p>\n\n    const { name, currency, phone, languages } = data.country\n\n    return (\n        <Layout>\n            <DetailWrapper img={img}>\n                <Box>\n                    <ContentWrapper>\n                        <h1> {name} </h1>\n                        <h2> <span> Currency: </span> {currency} </h2>\n                        <h2> <span> Area code: </span> {phone} </h2>\n\n                        <h3> Languages </h3>\n                        {languages.map(language => \n                            <Language key={language.code}>\n                                <p> {language.name} <span> {language.code} </span> </p>\n                            </Language>\n                        )}\n                        <Button to='/countries'> back </Button>\n                    </ContentWrapper>\n                </Box>\n            </DetailWrapper>\n        </Layout>\n    )\n}\n\nconst DetailWrapper = styled.div`\n    height: 100vh;\n    ${setFlex()};\n`\n\nconst ContentWrapper = styled.div`\n   \n\n    h3 {\n        margin-bottom: ${setRem(12)};\n        margin-top: ${setRem(40)};\n        color: ${setColor.mainWhite};\n    }\n\n    h2 {\n        font-size: ${setRem(38)};\n        color: ${setColor.mainWhite};\n\n        span {\n            color: ${setColor.primaryColor};\n        }\n    }\n\n    h1 {\n        color: ${setColor.contrast};\n        font-size: ${setRem(48)};\n    }\n`\n\nconst Language = styled.div`\n    p {\n        color: ${setColor.primaryColor};\n        span {\n            color: ${setColor.mainWhite};\n        }\n    }\n`","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport App from './routes'\n\nconst client = new ApolloClient(\n{\n    uri: 'https://countries.trevorblades.com'\n})\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>\n, document.getElementById('root'))","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Countries from './pages/Countries'\nimport CountryDetail from './pages/CountryDetail'\n\nexport default () =>\n\n    <Router>\n        <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/countries' exact component={Countries} />\n            <Route path='/countries/:code' component={CountryDetail} />\n        </Switch>\n    </Router>"],"sourceRoot":""}